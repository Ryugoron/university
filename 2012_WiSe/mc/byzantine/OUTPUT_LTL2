output of pan -a
-------------------------------------------------------------------------
[lex@rumo byzantine]$ ./pan -a
Depth=     835 States=    1e+06 Transitions= 2.24e+06 Memory=    93.347	t=     20.1 R=   5e+04
Depth=     837 States=    2e+06 Transitions= 4.49e+06 Memory=   121.863	t=     40.3 R=   5e+04
Depth=     839 States=    3e+06 Transitions= 6.73e+06 Memory=   150.672	t=     60.6 R=   5e+04
Depth=     839 States=    4e+06 Transitions= 8.97e+06 Memory=   178.894	t=     80.7 R=   5e+04
Depth=     839 States=    5e+06 Transitions= 1.12e+07 Memory=   207.019	t=      101 R=   5e+04

(Spin Version 6.2.2 -- 6 June 2012)
	+ Partial Order Reduction
	+ Compression

Full statespace search for:
	never claim         	+ (claim2)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 188 byte, depth reached 839, errors: 0
  3896648 states, stored (5.19506e+06 visited)
  6451064 states, matched
 11646126 transitions (= visited+matched)
  1852480 atomic steps
hash conflicts:    293820 (resolved)

Stats on memory usage (in Megabytes):
  772.956	equivalent memory usage for states (stored*(State-vector + overhead))
  148.136	actual memory usage for states (compression: 19.16%)
         	state-vector as stored = 20 byte + 20 byte overhead
   64.000	memory used for hash table (-w24)
    0.343	memory used for DFS stack (-m10000)
  212.390	total actual memory usage


nr of templates: [ 0:globals 1:chans 2:procs ]
collapse counts: [ 0:37057 2:34 3:92 4:549 5:2 ]
unreached in init
	(0 of 25 states)
unreached in proctype Unreliable
	byzantine.pml:59, state 74, "(1)"
	byzantine.pml:25, state 83, "A[processId].ch[locC]!0"
	byzantine.pml:24, state 91, "locC = 0"
	byzantine.pml:25, state 95, "A[processId].ch[locC]!1"
	byzantine.pml:24, state 103, "locC = 0"
	byzantine.pml:64, state 104, "(1)"
	byzantine.pml:64, state 104, "(1)"
	(6 of 121 states)
unreached in proctype Reliable
	byzantine.pml:129, state 91, "A[round].ch[processId]?localVar"
	byzantine.pml:128, state 92, "(empty(A[round].ch[processId]))"
	byzantine.pml:128, state 92, "(nempty(A[round].ch[processId]))"
	byzantine.pml:133, state 97, "(1)"
	(3 of 113 states)
unreached in claim claim2
	_spin_nvr.tmp:10, state 11, "-end-"
	(1 of 11 states)

pan: elapsed time 105 seconds
pan: rate  49457.94 states/second

---------------------------------------------------------
output of ./spin -p
----------------------------------------------------

  0:	proc  - (:root:) creates proc  0 (:init:)
ltl claim2: (! (<> ((((initial==1)) && ((initialValues[0]==initialValues[1]))) && ((initialValues[1]==initialValues[2]))))) || (<> (((((initial==1)) && ((finalValues[0]==finalValues[1]))) && ((finalValues[1]==finalValues[2]))) && ((initialValues[0]==finalValues[0]))))
  1:	proc  0 (:init:) byzantine.pml:10 (state 1)	[i = 0]
  2:	proc  0 (:init:) byzantine.pml:12 (state 2)	[value = 1]
  3:	proc  0 (:init:) byzantine.pml:20 (state 10)	[.(goto)]
  4:	proc  0 (:init:) byzantine.pml:12 (state 9)	[((i<4))]
  5:	proc  0 (:init:) byzantine.pml:15 (state 4)	[initialValues[i] = 1]
  6:	proc  0 (:init:) byzantine.pml:15 (state 5)	[finalValues[i] = i]
  7:	proc  0 (:init:) byzantine.pml:15 (state 6)	[i = (i+1)]
  8:	proc  0 (:init:) byzantine.pml:20 (state 10)	[.(goto)]
  9:	proc  0 (:init:) byzantine.pml:12 (state 9)	[((i<4))]
 10:	proc  0 (:init:) byzantine.pml:15 (state 4)	[initialValues[i] = 1]
 11:	proc  0 (:init:) byzantine.pml:15 (state 5)	[finalValues[i] = i]
 12:	proc  0 (:init:) byzantine.pml:15 (state 6)	[i = (i+1)]
 13:	proc  0 (:init:) byzantine.pml:20 (state 10)	[.(goto)]
 14:	proc  0 (:init:) byzantine.pml:12 (state 9)	[((i<4))]
 15:	proc  0 (:init:) byzantine.pml:15 (state 4)	[initialValues[i] = 1]
 16:	proc  0 (:init:) byzantine.pml:15 (state 5)	[finalValues[i] = i]
 17:	proc  0 (:init:) byzantine.pml:15 (state 6)	[i = (i+1)]
 18:	proc  0 (:init:) byzantine.pml:20 (state 10)	[.(goto)]
 19:	proc  0 (:init:) byzantine.pml:12 (state 9)	[((i<4))]
 20:	proc  0 (:init:) byzantine.pml:15 (state 4)	[initialValues[i] = 1]
 21:	proc  0 (:init:) byzantine.pml:15 (state 5)	[finalValues[i] = i]
 22:	proc  0 (:init:) byzantine.pml:15 (state 6)	[i = (i+1)]
 23:	proc  0 (:init:) byzantine.pml:20 (state 10)	[.(goto)]
 24:	proc  0 (:init:) byzantine.pml:12 (state 9)	[else]
 25:	proc  0 (:init:) byzantine.pml:17 (state 8)	[goto :b0]
 26:	proc  0 (:init:) byzantine.pml:20 (state 12)	[i = 0]
 27:	proc  0 (:init:) byzantine.pml:25 (state 22)	[.(goto)]
 28:	proc  0 (:init:) byzantine.pml:21 (state 21)	[((i<3))]
Starting Reliable with pid 1
 29:	proc  0 (:init:) creates proc  1 (Reliable)
 29:	proc  0 (:init:) byzantine.pml:21 (state 14)	[(run Reliable(i))]
 30:	proc  0 (:init:) byzantine.pml:21 (state 15)	[i = (i+1)]
 31:	proc  1 (Reliable) byzantine.pml:86 (state 1)	[round = 0]
 32:	proc  0 (:init:) byzantine.pml:25 (state 22)	[.(goto)]
 33:	proc  1 (Reliable) byzantine.pml:87 (state 2)	[barrier = 4]
 34:	proc  1 (Reliable) byzantine.pml:88 (state 3)	[localVar = initialValues[processId]]
 35:	proc  0 (:init:) byzantine.pml:21 (state 21)	[((i<3))]
 36:	proc  1 (Reliable) byzantine.h:37 (state 9)	[barriercounter = (barriercounter+1)]
Starting Reliable with pid 2
 37:	proc  0 (:init:) creates proc  2 (Reliable)
 37:	proc  0 (:init:) byzantine.pml:21 (state 14)	[(run Reliable(i))]
 38:	proc  0 (:init:) byzantine.pml:21 (state 15)	[i = (i+1)]
 39:	proc  2 (Reliable) byzantine.pml:86 (state 1)	[round = 0]
 40:	proc  2 (Reliable) byzantine.pml:87 (state 2)	[barrier = 4]
 41:	proc  2 (Reliable) byzantine.pml:88 (state 3)	[localVar = initialValues[processId]]
 42:	proc  0 (:init:) byzantine.pml:25 (state 22)	[.(goto)]
 43:	proc  0 (:init:) byzantine.pml:21 (state 21)	[((i<3))]
Starting Reliable with pid 3
 44:	proc  0 (:init:) creates proc  3 (Reliable)
 44:	proc  0 (:init:) byzantine.pml:21 (state 14)	[(run Reliable(i))]
 45:	proc  0 (:init:) byzantine.pml:21 (state 15)	[i = (i+1)]
 46:	proc  3 (Reliable) byzantine.pml:86 (state 1)	[round = 0]
 47:	proc  3 (Reliable) byzantine.pml:87 (state 2)	[barrier = 4]
 48:	proc  2 (Reliable) byzantine.h:37 (state 9)	[barriercounter = (barriercounter+1)]
 49:	proc  3 (Reliable) byzantine.pml:88 (state 3)	[localVar = initialValues[processId]]
 50:	proc  0 (:init:) byzantine.pml:25 (state 22)	[.(goto)]
 51:	proc  0 (:init:) byzantine.pml:21 (state 21)	[(((i>=3)&&(i<4)))]
 52:	proc  3 (Reliable) byzantine.h:37 (state 9)	[barriercounter = (barriercounter+1)]
Starting Unreliable with pid 4
 53:	proc  0 (:init:) creates proc  4 (Unreliable)
 53:	proc  0 (:init:) byzantine.pml:22 (state 17)	[(run Unreliable(i))]
 54:	proc  4 (Unreliable) byzantine.pml:33 (state 1)	[round = 0]
 55:	proc  0 (:init:) byzantine.pml:22 (state 18)	[i = (i+1)]
 56:	proc  4 (Unreliable) byzantine.pml:35 (state 2)	[locC = 0]
 57:	proc  4 (Unreliable) byzantine.h:37 (state 8)	[barriercounter = (barriercounter+1)]
 58:	proc  4 (Unreliable) byzantine.h:35 (state 5)	[((barrier<=barriercounter))]
 59:	proc  2 (Reliable) byzantine.h:35 (state 6)	[((barrier<=barriercounter))]
 60:	proc  1 (Reliable) byzantine.h:35 (state 6)	[((barrier<=barriercounter))]
 61:	proc  3 (Reliable) byzantine.h:35 (state 6)	[((barrier<=barriercounter))]
 62:	proc  0 (:init:) byzantine.pml:25 (state 22)	[.(goto)]
 63:	proc  2 (Reliable) byzantine.h:35 (state 7)	[(1)]
 64:	proc  0 (:init:) byzantine.pml:21 (state 21)	[else]
 65:	proc  3 (Reliable) byzantine.h:35 (state 7)	[(1)]
 66:	proc  0 (:init:) byzantine.pml:23 (state 20)	[goto :b1]
 67:	proc  0 (:init:) byzantine.pml:25 (state 24)	[initial = 1]
 68:	proc  4 (Unreliable) byzantine.h:35 (state 6)	[(1)]
 69:	proc  2 (Reliable) byzantine.h:36 (state 8)	[barrier = (barrier+4)]
 70:	proc  4 (Unreliable) byzantine.h:36 (state 7)	[barrier = (barrier+4)]
 71:	proc  1 (Reliable) byzantine.h:35 (state 7)	[(1)]
 72:	proc  1 (Reliable) byzantine.h:36 (state 8)	[barrier = (barrier+4)]
 73:	proc  3 (Reliable) byzantine.h:36 (state 8)	[barrier = (barrier+4)]
 74:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
 75:	proc  3 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
 76:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
 77:	proc  3 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
 78:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
 79:	proc  2 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
 80:	proc  2 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
 81:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 82:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 83:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 84:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 85:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 86:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 87:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 88:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 89:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 90:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 91:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 92:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 93:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
 94:	proc  2 (Reliable) byzantine.h:25 (state 21)	[break]
 95:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
 96:	proc  3 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
 97:	proc  3 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
 98:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 99:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
100:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
101:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
102:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
103:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
104:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
105:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
106:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
107:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
108:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
109:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
110:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
111:	proc  3 (Reliable) byzantine.h:25 (state 21)	[break]
112:	proc  2 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
113:	proc  4 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
114:	proc  4 (Unreliable) byzantine.pml:36 (state 118)	[((round<(1+1)))]
115:	proc  1 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
116:	proc  1 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
117:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
118:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
119:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
120:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
121:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
122:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
123:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
124:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
125:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
126:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
127:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
128:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
129:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
130:	proc  1 (Reliable) byzantine.h:25 (state 21)	[break]
131:	proc  1 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
132:	proc  3 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
133:	proc  4 (Unreliable) byzantine.h:37 (state 15)	[barriercounter = (barriercounter+1)]
134:	proc  1 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
135:	proc  4 (Unreliable) byzantine.h:35 (state 12)	[((barrier<=barriercounter))]
136:	proc  4 (Unreliable) byzantine.h:35 (state 13)	[(1)]
137:	proc  2 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
138:	proc  3 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
139:	proc  2 (Reliable) byzantine.h:35 (state 27)	[(1)]
140:	proc  1 (Reliable) byzantine.h:35 (state 27)	[(1)]
141:	proc  2 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
142:	proc  1 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
143:	proc  4 (Unreliable) byzantine.h:36 (state 14)	[barrier = (barrier+4)]
144:	proc  3 (Reliable) byzantine.h:35 (state 27)	[(1)]
145:	proc  1 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
146:	proc  1 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
147:	proc  2 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
148:	proc  2 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
149:	proc  4 (Unreliable) byzantine.pml:38 (state 16)	[locC = 0]
150:	proc  1 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
151:	proc  2 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
152:	proc  4 (Unreliable) byzantine.pml:40 (state 43)	[(1)]
153:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
154:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
155:	proc  4 (Unreliable) byzantine.pml:41 (state 18)	[(1)]
156:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
157:	proc  3 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
158:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
159:	proc  3 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
160:	proc  4 (Unreliable) byzantine.pml:45 (state 44)	[.(goto)]
161:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
162:	proc  4 (Unreliable) byzantine.h:37 (state 50)	[barriercounter = (barriercounter+1)]
163:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
164:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
165:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
166:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
167:	proc  3 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
168:	proc  3 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
169:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
170:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
171:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
172:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
173:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
174:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
175:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
176:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
177:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
178:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
179:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
180:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
181:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
182:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
183:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
184:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
185:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
186:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
187:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
188:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
189:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
190:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
191:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
192:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
193:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
194:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
195:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
196:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
197:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
198:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
199:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
200:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
201:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
202:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
203:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
204:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
205:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
206:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
207:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
208:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
209:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
210:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
211:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
212:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
213:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(empty(A[locC].ch[processId]))]
214:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
215:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
216:	proc  1 (Reliable) byzantine.pml:102 (state 35)	[(1)]
217:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
218:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
219:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
220:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
221:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
222:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
223:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
224:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
225:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
226:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
227:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
228:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(empty(A[locC].ch[processId]))]
229:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
230:	proc  2 (Reliable) byzantine.pml:102 (state 35)	[(1)]
231:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
232:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
233:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
234:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
235:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
236:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[else]
237:	proc  1 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
238:	proc  1 (Reliable) byzantine.pml:108 (state 47)	[(1)]
239:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
240:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
243:	proc  1 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
244:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[else]
245:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
246:	proc  2 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
247:	proc  2 (Reliable) byzantine.pml:108 (state 47)	[(1)]
248:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(empty(A[locC].ch[processId]))]
249:	proc  3 (Reliable) byzantine.pml:102 (state 35)	[(1)]
250:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
251:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
252:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
253:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[else]
256:	proc  2 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
257:	proc  3 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
258:	proc  3 (Reliable) byzantine.pml:108 (state 47)	[(1)]
261:	proc  3 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
262:	proc  1 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
263:	proc  1 (Reliable) byzantine.h:35 (state 58)	[(1)]
264:	proc  1 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
265:	proc  4 (Unreliable) byzantine.h:35 (state 47)	[((barrier<=barriercounter))]
266:	proc  1 (Reliable) byzantine.pml:118 (state 75)	[((processId==round))]
267:	proc  3 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
268:	proc  3 (Reliable) byzantine.h:35 (state 58)	[(1)]
269:	proc  2 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
270:	proc  3 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
271:	proc  1 (Reliable) byzantine.h:29 (state 72)	[locC = 0]
272:	proc  1 (Reliable) byzantine.h:28 (state 69)	[.(goto)]
273:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
274:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
275:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
276:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
277:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
278:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
279:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
280:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
281:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
282:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
283:	proc  3 (Reliable) byzantine.pml:118 (state 75)	[else]
284:	proc  4 (Unreliable) byzantine.h:35 (state 48)	[(1)]
285:	proc  4 (Unreliable) byzantine.h:36 (state 49)	[barrier = (barrier+4)]
286:	proc  2 (Reliable) byzantine.h:35 (state 58)	[(1)]
287:	proc  2 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
288:	proc  3 (Reliable) byzantine.pml:119 (state 74)	[(1)]
289:	proc  2 (Reliable) byzantine.pml:118 (state 75)	[else]
290:	proc  2 (Reliable) byzantine.pml:119 (state 74)	[(1)]
291:	proc  2 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
292:	proc  2 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
293:	proc  3 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
294:	proc  3 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
295:	proc  4 (Unreliable) byzantine.pml:47 (state 51)	[locC = 0]
296:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
297:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
298:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
299:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
300:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
301:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
302:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
303:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC>=4))]
304:	proc  1 (Reliable) byzantine.h:25 (state 70)	[break]
305:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
306:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
307:	proc  1 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
308:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
309:	proc  1 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
310:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
311:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
312:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
313:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
314:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
315:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
316:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
317:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
318:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
319:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
320:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
321:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
322:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(empty(A[locC].ch[processId]))]
323:	proc  4 (Unreliable) byzantine.pml:49 (state 54)	[(1)]
324:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
325:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
326:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
327:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[else]
328:	proc  4 (Unreliable) byzantine.pml:53 (state 61)	[goto :b5]
329:	proc  4 (Unreliable) byzantine.pml:56 (state 65)	[locC = 0]
330:	proc  4 (Unreliable) byzantine.h:37 (state 71)	[barriercounter = (barriercounter+1)]
331:	proc  2 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
332:	proc  3 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
333:	proc  1 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
334:	proc  4 (Unreliable) byzantine.h:35 (state 68)	[((barrier<=barriercounter))]
335:	proc  1 (Reliable) byzantine.h:35 (state 80)	[(1)]
336:	proc  1 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
337:	proc  3 (Reliable) byzantine.h:35 (state 80)	[(1)]
338:	proc  3 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
339:	proc  4 (Unreliable) byzantine.h:35 (state 69)	[(1)]
340:	proc  4 (Unreliable) byzantine.h:36 (state 70)	[barrier = (barrier+4)]
341:	proc  3 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
342:	proc  1 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
343:	proc  4 (Unreliable) byzantine.pml:58 (state 106)	[((processId!=round))]
344:	proc  4 (Unreliable) byzantine.pml:59 (state 77)	[(nempty(A[round].ch[processId]))]
345:	proc  3 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
346:	proc  2 (Reliable) byzantine.h:35 (state 80)	[(1)]
347:	proc  1 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
348:	proc  2 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
349:	proc  2 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
350:	proc  1 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
351:	proc  3 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
352:	proc  1 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
353:	proc  1 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
354:	proc  2 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
355:	proc  1 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
356:	proc  3 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
357:	proc  2 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
358:	proc  3 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
359:	proc  4 (Unreliable) byzantine.pml:60 (state 76)	[A[round].ch[processId]?_]
360:	proc  2 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
361:	proc  3 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
362:	proc  3 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
363:	proc  1 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
364:	proc  4 (Unreliable) byzantine.pml:62 (state 78)	[.(goto)]
365:	proc  4 (Unreliable) byzantine.pml:68 (state 107)	[.(goto)]
366:	proc  3 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
367:	proc  1 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
368:	proc  4 (Unreliable) byzantine.pml:68 (state 108)	[locC = 0]
369:	proc  2 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
370:	proc  2 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
371:	proc  2 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
372:	proc  2 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
373:	proc  4 (Unreliable) byzantine.pml:69 (state 109)	[round = (round+1)]
374:	proc  4 (Unreliable) byzantine.h:37 (state 115)	[barriercounter = (barriercounter+1)]
375:	proc  3 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
376:	proc  3 (Reliable) byzantine.h:35 (state 106)	[(1)]
377:	proc  3 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
378:	proc  3 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
379:	proc  3 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
380:	proc  1 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
381:	proc  3 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
382:	proc  3 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
383:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
384:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
385:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
386:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
387:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
388:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
389:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
390:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
391:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
392:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
393:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
394:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
395:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
396:	proc  3 (Reliable) byzantine.h:25 (state 21)	[break]
397:	proc  1 (Reliable) byzantine.h:35 (state 106)	[(1)]
398:	proc  4 (Unreliable) byzantine.h:35 (state 112)	[((barrier<=barriercounter))]
399:	proc  2 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
400:	proc  1 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
401:	proc  2 (Reliable) byzantine.h:35 (state 106)	[(1)]
402:	proc  3 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
403:	proc  4 (Unreliable) byzantine.h:35 (state 113)	[(1)]
404:	proc  2 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
405:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
406:	proc  4 (Unreliable) byzantine.h:36 (state 114)	[barrier = (barrier+4)]
407:	proc  4 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
408:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
409:	proc  4 (Unreliable) byzantine.pml:36 (state 118)	[((round<(1+1)))]
410:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
411:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
412:	proc  2 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
413:	proc  2 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
414:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
415:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
416:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
417:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
418:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
419:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
420:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
421:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
422:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
423:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
424:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
425:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
426:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
427:	proc  2 (Reliable) byzantine.h:25 (state 21)	[break]
428:	proc  2 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
429:	proc  4 (Unreliable) byzantine.h:37 (state 15)	[barriercounter = (barriercounter+1)]
430:	proc  1 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
431:	proc  1 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
432:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
433:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
434:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
435:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
436:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
437:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
438:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
439:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
440:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
441:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
442:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
443:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
444:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
445:	proc  1 (Reliable) byzantine.h:25 (state 21)	[break]
446:	proc  1 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
447:	proc  4 (Unreliable) byzantine.h:35 (state 12)	[((barrier<=barriercounter))]
448:	proc  4 (Unreliable) byzantine.h:35 (state 13)	[(1)]
449:	proc  1 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
450:	proc  4 (Unreliable) byzantine.h:36 (state 14)	[barrier = (barrier+4)]
451:	proc  4 (Unreliable) byzantine.pml:38 (state 16)	[locC = 0]
452:	proc  3 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
453:	proc  2 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
454:	proc  2 (Reliable) byzantine.h:35 (state 27)	[(1)]
455:	proc  2 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
456:	proc  1 (Reliable) byzantine.h:35 (state 27)	[(1)]
457:	proc  1 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
458:	proc  2 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
459:	proc  3 (Reliable) byzantine.h:35 (state 27)	[(1)]
460:	proc  3 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
461:	proc  4 (Unreliable) byzantine.pml:40 (state 43)	[(1)]
462:	proc  1 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
463:	proc  2 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
464:	proc  4 (Unreliable) byzantine.h:29 (state 42)	[locC = 0]
465:	proc  4 (Unreliable) byzantine.h:28 (state 39)	[.(goto)]
466:	proc  4 (Unreliable) byzantine.h:25 (state 38)	[((locC<4))]
467:	proc  4 (Unreliable) byzantine.h:25 (state 34)	[A[processId].ch[locC]!1]
468:	proc  4 (Unreliable) byzantine.h:25 (state 35)	[locC = (locC+1)]
469:	proc  4 (Unreliable) byzantine.h:25 (state 38)	[((locC<4))]
470:	proc  4 (Unreliable) byzantine.h:25 (state 34)	[A[processId].ch[locC]!1]
471:	proc  4 (Unreliable) byzantine.h:25 (state 35)	[locC = (locC+1)]
472:	proc  4 (Unreliable) byzantine.h:25 (state 38)	[((locC<4))]
473:	proc  4 (Unreliable) byzantine.h:25 (state 34)	[A[processId].ch[locC]!1]
474:	proc  4 (Unreliable) byzantine.h:25 (state 35)	[locC = (locC+1)]
475:	proc  4 (Unreliable) byzantine.h:25 (state 38)	[((locC<4))]
476:	proc  4 (Unreliable) byzantine.h:25 (state 34)	[A[processId].ch[locC]!1]
477:	proc  4 (Unreliable) byzantine.h:25 (state 35)	[locC = (locC+1)]
478:	proc  4 (Unreliable) byzantine.h:25 (state 38)	[((locC>=4))]
479:	proc  4 (Unreliable) byzantine.h:25 (state 40)	[break]
480:	proc  2 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
481:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
482:	proc  4 (Unreliable) byzantine.pml:45 (state 44)	[.(goto)]
483:	proc  3 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
484:	proc  3 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
485:	proc  1 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
486:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
487:	proc  4 (Unreliable) byzantine.h:37 (state 50)	[barriercounter = (barriercounter+1)]
488:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
489:	proc  1 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
490:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
491:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
492:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
493:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
494:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
495:	proc  3 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
496:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
497:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
498:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
499:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
500:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
501:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
502:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
503:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
504:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
505:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
506:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
507:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
508:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
509:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
510:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
511:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
512:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
513:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
514:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
515:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
516:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
517:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
518:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
519:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
520:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
521:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
522:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
523:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
524:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
525:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
526:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
527:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
528:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
529:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
530:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
531:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
532:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
533:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
534:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
535:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
536:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
537:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
538:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
539:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
540:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
541:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
542:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
543:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
544:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
545:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
546:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
547:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
548:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
549:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
550:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
551:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
552:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
553:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
554:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
555:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
556:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
557:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
558:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
559:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
560:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
561:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[else]
562:	proc  2 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
563:	proc  2 (Reliable) byzantine.pml:108 (state 47)	[(1)]
564:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
565:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
568:	proc  2 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
569:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
570:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
571:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
572:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
573:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
574:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
575:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
576:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
577:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
578:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
579:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
580:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
581:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[else]
582:	proc  1 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
583:	proc  1 (Reliable) byzantine.pml:108 (state 47)	[(1)]
584:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[else]
585:	proc  3 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
586:	proc  3 (Reliable) byzantine.pml:108 (state 47)	[(1)]
589:	proc  3 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
592:	proc  1 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
593:	proc  3 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
594:	proc  3 (Reliable) byzantine.h:35 (state 58)	[(1)]
595:	proc  1 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
596:	proc  4 (Unreliable) byzantine.h:35 (state 47)	[((barrier<=barriercounter))]
597:	proc  4 (Unreliable) byzantine.h:35 (state 48)	[(1)]
598:	proc  3 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
599:	proc  2 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
600:	proc  2 (Reliable) byzantine.h:35 (state 58)	[(1)]
601:	proc  1 (Reliable) byzantine.h:35 (state 58)	[(1)]
602:	proc  3 (Reliable) byzantine.pml:118 (state 75)	[else]
603:	proc  4 (Unreliable) byzantine.h:36 (state 49)	[barrier = (barrier+4)]
604:	proc  3 (Reliable) byzantine.pml:119 (state 74)	[(1)]
605:	proc  4 (Unreliable) byzantine.pml:47 (state 51)	[locC = 0]
606:	proc  3 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
607:	proc  2 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
608:	proc  2 (Reliable) byzantine.pml:118 (state 75)	[((processId==round))]
609:	proc  2 (Reliable) byzantine.h:29 (state 72)	[locC = 0]
610:	proc  2 (Reliable) byzantine.h:28 (state 69)	[.(goto)]
611:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
612:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
613:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
614:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
615:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
616:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
617:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
618:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
619:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
620:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
621:	proc  1 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
622:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
623:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
624:	proc  1 (Reliable) byzantine.pml:118 (state 75)	[else]
625:	proc  3 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
626:	proc  1 (Reliable) byzantine.pml:119 (state 74)	[(1)]
627:	proc  1 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
628:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
629:	proc  1 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
630:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
631:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
632:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
633:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
634:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
635:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
636:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
637:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
638:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
639:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC>=4))]
640:	proc  2 (Reliable) byzantine.h:25 (state 70)	[break]
641:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
642:	proc  2 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
643:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
644:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
645:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
646:	proc  2 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
647:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
648:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
649:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
650:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
651:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
652:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
653:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
654:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
655:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
656:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
657:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
658:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[else]
659:	proc  4 (Unreliable) byzantine.pml:53 (state 61)	[goto :b5]
660:	proc  4 (Unreliable) byzantine.pml:56 (state 65)	[locC = 0]
661:	proc  4 (Unreliable) byzantine.h:37 (state 71)	[barriercounter = (barriercounter+1)]
662:	proc  2 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
663:	proc  1 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
664:	proc  1 (Reliable) byzantine.h:35 (state 80)	[(1)]
665:	proc  4 (Unreliable) byzantine.h:35 (state 68)	[((barrier<=barriercounter))]
666:	proc  3 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
667:	proc  2 (Reliable) byzantine.h:35 (state 80)	[(1)]
668:	proc  2 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
669:	proc  4 (Unreliable) byzantine.h:35 (state 69)	[(1)]
670:	proc  2 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
671:	proc  3 (Reliable) byzantine.h:35 (state 80)	[(1)]
672:	proc  3 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
673:	proc  1 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
674:	proc  2 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
675:	proc  1 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
676:	proc  3 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
677:	proc  4 (Unreliable) byzantine.h:36 (state 70)	[barrier = (barrier+4)]
678:	proc  4 (Unreliable) byzantine.pml:58 (state 106)	[((processId!=round))]
679:	proc  3 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
680:	proc  4 (Unreliable) byzantine.pml:59 (state 77)	[(nempty(A[round].ch[processId]))]
681:	proc  3 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
682:	proc  1 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
683:	proc  4 (Unreliable) byzantine.pml:60 (state 76)	[A[round].ch[processId]?_]
684:	proc  1 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
685:	proc  4 (Unreliable) byzantine.pml:62 (state 78)	[.(goto)]
686:	proc  4 (Unreliable) byzantine.pml:68 (state 107)	[.(goto)]
687:	proc  2 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
688:	proc  2 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
689:	proc  2 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
690:	proc  4 (Unreliable) byzantine.pml:68 (state 108)	[locC = 0]
691:	proc  3 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
692:	proc  3 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
693:	proc  2 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
694:	proc  2 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
695:	proc  4 (Unreliable) byzantine.pml:69 (state 109)	[round = (round+1)]
696:	proc  4 (Unreliable) byzantine.h:37 (state 115)	[barriercounter = (barriercounter+1)]
697:	proc  2 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
698:	proc  3 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
699:	proc  1 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
700:	proc  1 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
701:	proc  3 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
702:	proc  3 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
703:	proc  1 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
704:	proc  1 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
705:	proc  1 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
706:	proc  3 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
707:	proc  3 (Reliable) byzantine.h:35 (state 106)	[(1)]
708:	proc  4 (Unreliable) byzantine.h:35 (state 112)	[((barrier<=barriercounter))]
709:	proc  4 (Unreliable) byzantine.h:35 (state 113)	[(1)]
710:	proc  3 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
711:	proc  1 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
712:	proc  2 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
713:	proc  3 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
714:	proc  1 (Reliable) byzantine.h:35 (state 106)	[(1)]
715:	proc  1 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
716:	proc  4 (Unreliable) byzantine.h:36 (state 114)	[barrier = (barrier+4)]
717:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
718:	proc  4 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
719:	proc  3 (Reliable) byzantine.pml:91 (state 109)	[((round>=(1+1)))]
720:	proc  3 (Reliable) byzantine.pml:91 (state 11)	[goto :b8]
721:	proc  3 (Reliable) byzantine.pml:141 (state 112)	[finalValues[processId] = localVar]
722:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round>=(1+1)))]
723:	proc  1 (Reliable) byzantine.pml:91 (state 11)	[goto :b8]
724:	proc  4 (Unreliable) byzantine.pml:36 (state 118)	[else]
725:	proc  4 (Unreliable) byzantine.pml:71 (state 117)	[goto :b2]
725:	proc  4 (Unreliable)                       terminates
725:	proc  3 (Reliable)                   terminates
726:	proc  2 (Reliable) byzantine.h:35 (state 106)	[(1)]
727:	proc  2 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
728:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
729:	proc  1 (Reliable) byzantine.pml:141 (state 112)	[finalValues[processId] = localVar]
730:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round>=(1+1)))]
731:	proc  2 (Reliable) byzantine.pml:91 (state 11)	[goto :b8]
732:	proc  2 (Reliable) byzantine.pml:141 (state 112)	[finalValues[processId] = localVar]
732:	proc  2 (Reliable)               terminates
732:	proc  1 (Reliable)           terminates
732:	proc  0 (:init:)       terminates
5 processes created
