  0:	proc  - (:root:) creates proc  0 (:init:)
ltl claim1: <> (((initial==1)) && ((finalValues[0]==finalValues[1])))
  1:	proc  0 (:init:) byzantine.pml:10 (state 1)	[i = 0]
  2:	proc  0 (:init:) byzantine.pml:12 (state 2)	[value = 1]
  3:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
  4:	proc  0 (:init:) byzantine.pml:12 (state 10)	[((i<3))]
  5:	proc  0 (:init:) byzantine.pml:16 (state 4)	[initialValues[i] = value]
  6:	proc  0 (:init:) byzantine.pml:16 (state 5)	[value = (1-value)]
  7:	proc  0 (:init:) byzantine.pml:16 (state 6)	[finalValues[i] = i]
  8:	proc  0 (:init:) byzantine.pml:16 (state 7)	[i = (i+1)]
  9:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
 10:	proc  0 (:init:) byzantine.pml:12 (state 10)	[((i<3))]
 11:	proc  0 (:init:) byzantine.pml:16 (state 4)	[initialValues[i] = value]
 12:	proc  0 (:init:) byzantine.pml:16 (state 5)	[value = (1-value)]
 13:	proc  0 (:init:) byzantine.pml:16 (state 6)	[finalValues[i] = i]
 14:	proc  0 (:init:) byzantine.pml:16 (state 7)	[i = (i+1)]
 15:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
 16:	proc  0 (:init:) byzantine.pml:12 (state 10)	[((i<3))]
 17:	proc  0 (:init:) byzantine.pml:16 (state 4)	[initialValues[i] = value]
 18:	proc  0 (:init:) byzantine.pml:16 (state 5)	[value = (1-value)]
 19:	proc  0 (:init:) byzantine.pml:16 (state 6)	[finalValues[i] = i]
 20:	proc  0 (:init:) byzantine.pml:16 (state 7)	[i = (i+1)]
 21:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
 22:	proc  0 (:init:) byzantine.pml:12 (state 10)	[else]
 23:	proc  0 (:init:) byzantine.pml:17 (state 9)	[goto :b0]
 24:	proc  0 (:init:) byzantine.pml:20 (state 13)	[i = 0]
 25:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 26:	proc  0 (:init:) byzantine.pml:21 (state 22)	[((i<2))]
Starting Reliable with pid 1
 27:	proc  0 (:init:) creates proc  1 (Reliable)
 27:	proc  0 (:init:) byzantine.pml:21 (state 15)	[(run Reliable(i))]
 28:	proc  0 (:init:) byzantine.pml:21 (state 16)	[i = (i+1)]
 29:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 30:	proc  1 (Reliable) byzantine.pml:86 (state 1)	[round = 0]
 31:	proc  1 (Reliable) byzantine.pml:87 (state 2)	[barrier = 3]
 32:	proc  1 (Reliable) byzantine.pml:88 (state 3)	[localVar = initialValues[processId]]
 33:	proc  0 (:init:) byzantine.pml:21 (state 22)	[((i<2))]
Starting Reliable with pid 2
 34:	proc  0 (:init:) creates proc  2 (Reliable)
 34:	proc  0 (:init:) byzantine.pml:21 (state 15)	[(run Reliable(i))]
 35:	proc  2 (Reliable) byzantine.pml:86 (state 1)	[round = 0]
 36:	proc  0 (:init:) byzantine.pml:21 (state 16)	[i = (i+1)]
 37:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 38:	proc  1 (Reliable) byzantine.h:37 (state 9)	[barriercounter = (barriercounter+1)]
 39:	proc  0 (:init:) byzantine.pml:21 (state 22)	[(((i>=2)&&(i<3)))]
 40:	proc  2 (Reliable) byzantine.pml:87 (state 2)	[barrier = 3]
Starting Unreliable with pid 3
 41:	proc  0 (:init:) creates proc  3 (Unreliable)
 41:	proc  0 (:init:) byzantine.pml:22 (state 18)	[(run Unreliable(i))]
 42:	proc  3 (Unreliable) byzantine.pml:33 (state 1)	[round = 0]
 43:	proc  0 (:init:) byzantine.pml:22 (state 19)	[i = (i+1)]
 44:	proc  3 (Unreliable) byzantine.pml:35 (state 2)	[locC = 0]
 45:	proc  2 (Reliable) byzantine.pml:88 (state 3)	[localVar = initialValues[processId]]
 46:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 47:	proc  0 (:init:) byzantine.pml:21 (state 22)	[else]
 48:	proc  2 (Reliable) byzantine.h:37 (state 9)	[barriercounter = (barriercounter+1)]
 49:	proc  0 (:init:) byzantine.pml:23 (state 21)	[goto :b1]
 50:	proc  0 (:init:) byzantine.pml:25 (state 25)	[initial = 1]
 51:	proc  3 (Unreliable) byzantine.h:37 (state 8)	[barriercounter = (barriercounter+1)]
 52:	proc  1 (Reliable) byzantine.h:35 (state 6)	[((barrier<=barriercounter))]
 53:	proc  1 (Reliable) byzantine.h:35 (state 7)	[(1)]
 54:	proc  1 (Reliable) byzantine.h:36 (state 8)	[barrier = (barrier+3)]
 55:	proc  3 (Unreliable) byzantine.h:35 (state 5)	[((barrier<=barriercounter))]
 56:	proc  3 (Unreliable) byzantine.h:35 (state 6)	[(1)]
 57:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
 58:	proc  3 (Unreliable) byzantine.h:36 (state 7)	[barrier = (barrier+3)]
 59:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
 60:	proc  2 (Reliable) byzantine.h:35 (state 6)	[((barrier<=barriercounter))]
 61:	proc  2 (Reliable) byzantine.h:35 (state 7)	[(1)]
 62:	proc  2 (Reliable) byzantine.h:36 (state 8)	[barrier = (barrier+3)]
 63:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
 64:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
 65:	proc  2 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
 66:	proc  2 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
 67:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
 68:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 69:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 70:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
 71:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 72:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 73:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
 74:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 75:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 76:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC>=3))]
 77:	proc  2 (Reliable) byzantine.h:25 (state 21)	[break]
 78:	proc  3 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
 79:	proc  3 (Unreliable) byzantine.pml:36 (state 118)	[((round<(1+1)))]
 80:	proc  3 (Unreliable) byzantine.h:37 (state 15)	[barriercounter = (barriercounter+1)]
 81:	proc  2 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
 82:	proc  1 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
 83:	proc  1 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
 84:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
 85:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 86:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 87:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
 88:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 89:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 90:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
 91:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 92:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 93:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC>=3))]
 94:	proc  1 (Reliable) byzantine.h:25 (state 21)	[break]
 95:	proc  1 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
 96:	proc  2 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
 97:	proc  2 (Reliable) byzantine.h:35 (state 27)	[(1)]
 98:	proc  2 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+3)]
 99:	proc  3 (Unreliable) byzantine.h:35 (state 12)	[((barrier<=barriercounter))]
100:	proc  3 (Unreliable) byzantine.h:35 (state 13)	[(1)]
101:	proc  3 (Unreliable) byzantine.h:36 (state 14)	[barrier = (barrier+3)]
102:	proc  1 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
103:	proc  2 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
104:	proc  1 (Reliable) byzantine.h:35 (state 27)	[(1)]
105:	proc  1 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+3)]
106:	proc  2 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
107:	proc  3 (Unreliable) byzantine.pml:38 (state 16)	[locC = 0]
108:	proc  1 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
109:	proc  2 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
110:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
111:	proc  1 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
112:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
113:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
114:	proc  3 (Unreliable) byzantine.pml:40 (state 43)	[(1)]
115:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
116:	proc  1 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
117:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
118:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
119:	proc  3 (Unreliable) byzantine.h:29 (state 42)	[locC = 0]
120:	proc  3 (Unreliable) byzantine.h:28 (state 39)	[.(goto)]
121:	proc  3 (Unreliable) byzantine.h:25 (state 38)	[((locC<3))]
122:	proc  3 (Unreliable) byzantine.h:25 (state 34)	[A[processId].ch[locC]!1]
123:	proc  3 (Unreliable) byzantine.h:25 (state 35)	[locC = (locC+1)]
124:	proc  3 (Unreliable) byzantine.h:25 (state 38)	[((locC<3))]
125:	proc  3 (Unreliable) byzantine.h:25 (state 34)	[A[processId].ch[locC]!1]
126:	proc  3 (Unreliable) byzantine.h:25 (state 35)	[locC = (locC+1)]
127:	proc  3 (Unreliable) byzantine.h:25 (state 38)	[((locC<3))]
128:	proc  3 (Unreliable) byzantine.h:25 (state 34)	[A[processId].ch[locC]!1]
129:	proc  3 (Unreliable) byzantine.h:25 (state 35)	[locC = (locC+1)]
130:	proc  3 (Unreliable) byzantine.h:25 (state 38)	[((locC>=3))]
131:	proc  3 (Unreliable) byzantine.h:25 (state 40)	[break]
132:	proc  3 (Unreliable) byzantine.pml:45 (state 44)	[.(goto)]
133:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
134:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
135:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
136:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
137:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
138:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
139:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
140:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
141:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
142:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
143:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
144:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
145:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
146:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
147:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
148:	proc  3 (Unreliable) byzantine.h:37 (state 50)	[barriercounter = (barriercounter+1)]
149:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
150:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
151:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
152:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
153:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
154:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
155:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
156:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
157:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
158:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
159:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
160:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
161:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
162:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
163:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
164:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
165:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
166:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
167:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
168:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
169:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
170:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
171:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[else]
172:	proc  2 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
173:	proc  2 (Reliable) byzantine.pml:108 (state 47)	[(1)]
174:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
175:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[else]
176:	proc  1 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
179:	proc  2 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
180:	proc  1 (Reliable) byzantine.pml:108 (state 47)	[(1)]
183:	proc  1 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
184:	proc  2 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
185:	proc  3 (Unreliable) byzantine.h:35 (state 47)	[((barrier<=barriercounter))]
186:	proc  2 (Reliable) byzantine.h:35 (state 58)	[(1)]
187:	proc  3 (Unreliable) byzantine.h:35 (state 48)	[(1)]
188:	proc  2 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+3)]
189:	proc  3 (Unreliable) byzantine.h:36 (state 49)	[barrier = (barrier+3)]
190:	proc  1 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
191:	proc  2 (Reliable) byzantine.pml:118 (state 75)	[else]
192:	proc  3 (Unreliable) byzantine.pml:47 (state 51)	[locC = 0]
193:	proc  2 (Reliable) byzantine.pml:119 (state 74)	[(1)]
194:	proc  2 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
195:	proc  3 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
196:	proc  3 (Unreliable) byzantine.pml:48 (state 62)	[((locC<3))]
197:	proc  2 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
198:	proc  3 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
199:	proc  1 (Reliable) byzantine.h:35 (state 58)	[(1)]
200:	proc  3 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
201:	proc  1 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+3)]
202:	proc  3 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
203:	proc  1 (Reliable) byzantine.pml:118 (state 75)	[((processId==round))]
204:	proc  3 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
205:	proc  3 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
206:	proc  3 (Unreliable) byzantine.pml:48 (state 62)	[((locC<3))]
207:	proc  1 (Reliable) byzantine.h:29 (state 72)	[locC = 0]
208:	proc  1 (Reliable) byzantine.h:28 (state 69)	[.(goto)]
209:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<3))]
210:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
211:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
212:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<3))]
213:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
214:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
215:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<3))]
216:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
217:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
218:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC>=3))]
219:	proc  1 (Reliable) byzantine.h:25 (state 70)	[break]
220:	proc  1 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
221:	proc  3 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
222:	proc  3 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
223:	proc  3 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
224:	proc  1 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
225:	proc  3 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
226:	proc  3 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
227:	proc  3 (Unreliable) byzantine.pml:48 (state 62)	[((locC<3))]
228:	proc  3 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
229:	proc  3 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
230:	proc  3 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
231:	proc  3 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
232:	proc  3 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
233:	proc  3 (Unreliable) byzantine.pml:48 (state 62)	[else]
234:	proc  3 (Unreliable) byzantine.pml:53 (state 61)	[goto :b5]
235:	proc  3 (Unreliable) byzantine.pml:56 (state 65)	[locC = 0]
236:	proc  3 (Unreliable) byzantine.h:37 (state 71)	[barriercounter = (barriercounter+1)]
237:	proc  2 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
238:	proc  2 (Reliable) byzantine.h:35 (state 80)	[(1)]
239:	proc  2 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+3)]
240:	proc  1 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
241:	proc  3 (Unreliable) byzantine.h:35 (state 68)	[((barrier<=barriercounter))]
242:	proc  1 (Reliable) byzantine.h:35 (state 80)	[(1)]
243:	proc  1 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+3)]
244:	proc  2 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=2))]
245:	proc  1 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=2))]
246:	proc  3 (Unreliable) byzantine.h:35 (state 69)	[(1)]
247:	proc  1 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
248:	proc  2 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
249:	proc  3 (Unreliable) byzantine.h:36 (state 70)	[barrier = (barrier+3)]
250:	proc  1 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
251:	proc  2 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
252:	proc  1 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
253:	proc  3 (Unreliable) byzantine.pml:58 (state 106)	[((processId!=round))]
254:	proc  2 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
255:	proc  1 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
256:	proc  2 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
257:	proc  3 (Unreliable) byzantine.pml:59 (state 77)	[(nempty(A[round].ch[processId]))]
258:	proc  2 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
259:	proc  3 (Unreliable) byzantine.pml:60 (state 76)	[A[round].ch[processId]?_]
260:	proc  1 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
261:	proc  3 (Unreliable) byzantine.pml:62 (state 78)	[.(goto)]
262:	proc  3 (Unreliable) byzantine.pml:68 (state 107)	[.(goto)]
263:	proc  2 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
264:	proc  3 (Unreliable) byzantine.pml:68 (state 108)	[locC = 0]
265:	proc  1 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
266:	proc  3 (Unreliable) byzantine.pml:69 (state 109)	[round = (round+1)]
267:	proc  3 (Unreliable) byzantine.h:37 (state 115)	[barriercounter = (barriercounter+1)]
268:	proc  2 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
269:	proc  1 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
270:	proc  3 (Unreliable) byzantine.h:35 (state 112)	[((barrier<=barriercounter))]
271:	proc  2 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
272:	proc  2 (Reliable) byzantine.h:35 (state 106)	[(1)]
273:	proc  1 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
274:	proc  2 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+3)]
275:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
276:	proc  1 (Reliable) byzantine.h:35 (state 106)	[(1)]
277:	proc  3 (Unreliable) byzantine.h:35 (state 113)	[(1)]
278:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
279:	proc  3 (Unreliable) byzantine.h:36 (state 114)	[barrier = (barrier+3)]
280:	proc  1 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+3)]
281:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
282:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
283:	proc  2 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
284:	proc  2 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
285:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
286:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
287:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
288:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
289:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
290:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
291:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
292:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
293:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
294:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC>=3))]
295:	proc  2 (Reliable) byzantine.h:25 (state 21)	[break]
296:	proc  2 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
297:	proc  3 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
298:	proc  1 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
299:	proc  1 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
300:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
301:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
302:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
303:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
304:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
305:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
306:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<3))]
307:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
308:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
309:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC>=3))]
310:	proc  1 (Reliable) byzantine.h:25 (state 21)	[break]
311:	proc  3 (Unreliable) byzantine.pml:36 (state 118)	[((round<(1+1)))]
312:	proc  3 (Unreliable) byzantine.h:37 (state 15)	[barriercounter = (barriercounter+1)]
313:	proc  1 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
314:	proc  1 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
315:	proc  2 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
316:	proc  2 (Reliable) byzantine.h:35 (state 27)	[(1)]
317:	proc  3 (Unreliable) byzantine.h:35 (state 12)	[((barrier<=barriercounter))]
318:	proc  1 (Reliable) byzantine.h:35 (state 27)	[(1)]
319:	proc  1 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+3)]
320:	proc  1 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
321:	proc  3 (Unreliable) byzantine.h:35 (state 13)	[(1)]
322:	proc  2 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+3)]
323:	proc  3 (Unreliable) byzantine.h:36 (state 14)	[barrier = (barrier+3)]
324:	proc  2 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
325:	proc  3 (Unreliable) byzantine.pml:38 (state 16)	[locC = 0]
326:	proc  1 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
327:	proc  3 (Unreliable) byzantine.pml:40 (state 43)	[(1)]
328:	proc  1 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
329:	proc  3 (Unreliable) byzantine.h:29 (state 30)	[locC = 0]
330:	proc  3 (Unreliable) byzantine.h:28 (state 27)	[.(goto)]
331:	proc  3 (Unreliable) byzantine.h:25 (state 26)	[((locC<3))]
332:	proc  3 (Unreliable) byzantine.h:25 (state 22)	[A[processId].ch[locC]!0]
333:	proc  3 (Unreliable) byzantine.h:25 (state 23)	[locC = (locC+1)]
334:	proc  3 (Unreliable) byzantine.h:25 (state 26)	[((locC<3))]
335:	proc  3 (Unreliable) byzantine.h:25 (state 22)	[A[processId].ch[locC]!0]
336:	proc  3 (Unreliable) byzantine.h:25 (state 23)	[locC = (locC+1)]
337:	proc  3 (Unreliable) byzantine.h:25 (state 26)	[((locC<3))]
338:	proc  3 (Unreliable) byzantine.h:25 (state 22)	[A[processId].ch[locC]!0]
339:	proc  3 (Unreliable) byzantine.h:25 (state 23)	[locC = (locC+1)]
340:	proc  3 (Unreliable) byzantine.h:25 (state 26)	[((locC>=3))]
341:	proc  3 (Unreliable) byzantine.h:25 (state 28)	[break]
342:	proc  2 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
343:	proc  2 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
344:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
345:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
346:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
347:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
348:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
349:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
350:	proc  3 (Unreliable) byzantine.pml:45 (state 44)	[.(goto)]
351:	proc  3 (Unreliable) byzantine.h:37 (state 50)	[barriercounter = (barriercounter+1)]
352:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
353:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
354:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
355:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
356:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
357:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
358:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
359:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
360:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
361:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
362:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
363:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
364:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
365:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
366:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
367:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
368:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
369:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
370:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
371:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
372:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
373:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
374:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
375:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
376:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
377:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
378:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
379:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
380:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
381:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
382:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
383:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<3))]
384:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[else]
385:	proc  1 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
386:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
387:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
388:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
389:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
390:	proc  1 (Reliable) byzantine.pml:108 (state 47)	[(1)]
391:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
392:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
393:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[else]
394:	proc  2 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
397:	proc  1 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
398:	proc  2 (Reliable) byzantine.pml:108 (state 47)	[(1)]
401:	proc  2 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
402:	proc  2 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
403:	proc  2 (Reliable) byzantine.h:35 (state 58)	[(1)]
404:	proc  1 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
405:	proc  2 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+3)]
406:	proc  1 (Reliable) byzantine.h:35 (state 58)	[(1)]
407:	proc  1 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+3)]
408:	proc  3 (Unreliable) byzantine.h:35 (state 47)	[((barrier<=barriercounter))]
409:	proc  3 (Unreliable) byzantine.h:35 (state 48)	[(1)]
410:	proc  3 (Unreliable) byzantine.h:36 (state 49)	[barrier = (barrier+3)]
411:	proc  1 (Reliable) byzantine.pml:118 (state 75)	[else]
412:	proc  1 (Reliable) byzantine.pml:119 (state 74)	[(1)]
413:	proc  3 (Unreliable) byzantine.pml:47 (state 51)	[locC = 0]
414:	proc  2 (Reliable) byzantine.pml:118 (state 75)	[((processId==round))]
415:	proc  3 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
416:	proc  2 (Reliable) byzantine.h:29 (state 72)	[locC = 0]
417:	proc  2 (Reliable) byzantine.h:28 (state 69)	[.(goto)]
418:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<3))]
419:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
420:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
421:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<3))]
422:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
423:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
424:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<3))]
425:	proc  3 (Unreliable) byzantine.pml:48 (state 62)	[((locC<3))]
426:	proc  3 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
427:	proc  1 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
428:	proc  3 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
429:	proc  1 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
430:	proc  3 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
431:	proc  3 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
432:	proc  3 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
433:	proc  3 (Unreliable) byzantine.pml:48 (state 62)	[((locC<3))]
434:	proc  3 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
435:	proc  3 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
436:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
437:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
438:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC>=3))]
439:	proc  2 (Reliable) byzantine.h:25 (state 70)	[break]
440:	proc  2 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
441:	proc  3 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
442:	proc  3 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
443:	proc  3 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
444:	proc  2 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
445:	proc  3 (Unreliable) byzantine.pml:48 (state 62)	[((locC<3))]
446:	proc  3 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
447:	proc  3 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
448:	proc  3 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
449:	proc  3 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
450:	proc  3 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
451:	proc  3 (Unreliable) byzantine.pml:48 (state 62)	[else]
452:	proc  3 (Unreliable) byzantine.pml:53 (state 61)	[goto :b5]
453:	proc  3 (Unreliable) byzantine.pml:56 (state 65)	[locC = 0]
454:	proc  3 (Unreliable) byzantine.h:37 (state 71)	[barriercounter = (barriercounter+1)]
455:	proc  1 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
456:	proc  1 (Reliable) byzantine.h:35 (state 80)	[(1)]
457:	proc  1 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+3)]
458:	proc  2 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
459:	proc  2 (Reliable) byzantine.h:35 (state 80)	[(1)]
460:	proc  2 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+3)]
461:	proc  2 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=2))]
462:	proc  1 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=2))]
463:	proc  2 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
464:	proc  2 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
465:	proc  1 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
466:	proc  1 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
467:	proc  1 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
468:	proc  2 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
469:	proc  2 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
470:	proc  2 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
471:	proc  2 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
472:	proc  3 (Unreliable) byzantine.h:35 (state 68)	[((barrier<=barriercounter))]
473:	proc  1 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
474:	proc  3 (Unreliable) byzantine.h:35 (state 69)	[(1)]
475:	proc  3 (Unreliable) byzantine.h:36 (state 70)	[barrier = (barrier+3)]
476:	proc  1 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
477:	proc  3 (Unreliable) byzantine.pml:58 (state 106)	[((processId!=round))]
478:	proc  3 (Unreliable) byzantine.pml:59 (state 77)	[(nempty(A[round].ch[processId]))]
479:	proc  1 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
480:	proc  1 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
481:	proc  3 (Unreliable) byzantine.pml:60 (state 76)	[A[round].ch[processId]?_]
482:	proc  3 (Unreliable) byzantine.pml:62 (state 78)	[.(goto)]
483:	proc  2 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
484:	proc  3 (Unreliable) byzantine.pml:68 (state 107)	[.(goto)]
485:	proc  3 (Unreliable) byzantine.pml:68 (state 108)	[locC = 0]
486:	proc  3 (Unreliable) byzantine.pml:69 (state 109)	[round = (round+1)]
487:	proc  3 (Unreliable) byzantine.h:37 (state 115)	[barriercounter = (barriercounter+1)]
488:	proc  1 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
489:	proc  3 (Unreliable) byzantine.h:35 (state 112)	[((barrier<=barriercounter))]
490:	proc  3 (Unreliable) byzantine.h:35 (state 113)	[(1)]
491:	proc  1 (Reliable) byzantine.h:35 (state 106)	[(1)]
492:	proc  3 (Unreliable) byzantine.h:36 (state 114)	[barrier = (barrier+3)]
493:	proc  2 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
494:	proc  3 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
495:	proc  3 (Unreliable) byzantine.pml:36 (state 118)	[else]
496:	proc  1 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+3)]
497:	proc  3 (Unreliable) byzantine.pml:71 (state 117)	[goto :b2]
498:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
499:	proc  2 (Reliable) byzantine.h:35 (state 106)	[(1)]
500:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round>=(1+1)))]
501:	proc  2 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+3)]
501:	proc  3 (Unreliable)                   terminates
502:	proc  1 (Reliable) byzantine.pml:91 (state 11)	[goto :b8]
503:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
504:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round>=(1+1)))]
505:	proc  2 (Reliable) byzantine.pml:91 (state 11)	[goto :b8]
506:	proc  2 (Reliable) byzantine.pml:141 (state 112)	[finalValues[processId] = localVar]
506:	proc  2 (Reliable)               terminates
507:	proc  1 (Reliable) byzantine.pml:141 (state 112)	[finalValues[processId] = localVar]
507:	proc  1 (Reliable)           terminates
507:	proc  0 (:init:)       terminates
4 processes created
