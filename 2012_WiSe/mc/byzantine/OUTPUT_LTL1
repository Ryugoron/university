Output of ./pan -a
---------------------------------------------------------------------------------
Depth=     849 States=    1e+06 Transitions= 2.17e+06 Memory=    84.168	t=     19.1 R=   5e+04
Depth=     851 States=    2e+06 Transitions= 4.34e+06 Memory=   103.406	t=     39.4 R=   5e+04
Depth=     853 States=    3e+06 Transitions= 6.52e+06 Memory=   122.742	t=     59.6 R=   5e+04
Depth=     853 States=    4e+06 Transitions= 8.68e+06 Memory=   141.980	t=     78.6 R=   5e+04
Depth=     853 States=    5e+06 Transitions= 1.08e+07 Memory=   160.828	t=     97.7 R=   5e+04

(Spin Version 6.2.2 -- 6 June 2012)
	+ Partial Order Reduction
	+ Compression

Full statespace search for:
	never claim         	+ (claim1)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 188 byte, depth reached 853, errors: 0
  2629328 states, stored (5.25866e+06 visited)
  6151413 states, matched
 11410069 transitions (= visited+matched)
  1481984 atomic steps
hash conflicts:    372827 (resolved)

Stats on memory usage (in Megabytes):
  521.565	equivalent memory usage for states (stored*(State-vector + overhead))
  101.353	actual memory usage for states (compression: 19.43%)
         	state-vector as stored = 20 byte + 20 byte overhead
   64.000	memory used for hash table (-w24)
    0.343	memory used for DFS stack (-m10000)
  165.613	total actual memory usage


nr of templates: [ 0:globals 1:chans 2:procs ]
collapse counts: [ 0:37797 2:38 3:92 4:555 5:1 ]
unreached in init
	(0 of 26 states)
unreached in proctype Unreliable
	byzantine.pml:59, state 74, "(1)"
	byzantine.pml:25, state 83, "A[processId].ch[locC]!0"
	byzantine.pml:24, state 91, "locC = 0"
	byzantine.pml:25, state 95, "A[processId].ch[locC]!1"
	byzantine.pml:24, state 103, "locC = 0"
	byzantine.pml:64, state 104, "(1)"
	byzantine.pml:64, state 104, "(1)"
	(6 of 121 states)
unreached in proctype Reliable
	(0 of 113 states)
unreached in claim claim1
	_spin_nvr.tmp:6, state 5, "-end-"
	(1 of 5 states)

pan: elapsed time 103 seconds
pan: rate 51214.024 states/second  

----------------------------------------------------------------------------
outout of spin -p
-----------------------------------------------------------------------------
0:	proc  - (:root:) creates proc  0 (:init:)
ltl claim1: <> ((((initial==1)) && ((finalValues[0]==finalValues[1]))) && ((finalValues[1]==finalValues[2])))
  1:	proc  0 (:init:) byzantine.pml:10 (state 1)	[i = 0]
  2:	proc  0 (:init:) byzantine.pml:12 (state 2)	[value = 1]
  3:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
  4:	proc  0 (:init:) byzantine.pml:12 (state 10)	[((i<4))]
  5:	proc  0 (:init:) byzantine.pml:16 (state 4)	[initialValues[i] = value]
  6:	proc  0 (:init:) byzantine.pml:16 (state 5)	[value = (1-value)]
  7:	proc  0 (:init:) byzantine.pml:16 (state 6)	[finalValues[i] = i]
  8:	proc  0 (:init:) byzantine.pml:16 (state 7)	[i = (i+1)]
  9:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
 10:	proc  0 (:init:) byzantine.pml:12 (state 10)	[((i<4))]
 11:	proc  0 (:init:) byzantine.pml:16 (state 4)	[initialValues[i] = value]
 12:	proc  0 (:init:) byzantine.pml:16 (state 5)	[value = (1-value)]
 13:	proc  0 (:init:) byzantine.pml:16 (state 6)	[finalValues[i] = i]
 14:	proc  0 (:init:) byzantine.pml:16 (state 7)	[i = (i+1)]
 15:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
 16:	proc  0 (:init:) byzantine.pml:12 (state 10)	[((i<4))]
 17:	proc  0 (:init:) byzantine.pml:16 (state 4)	[initialValues[i] = value]
 18:	proc  0 (:init:) byzantine.pml:16 (state 5)	[value = (1-value)]
 19:	proc  0 (:init:) byzantine.pml:16 (state 6)	[finalValues[i] = i]
 20:	proc  0 (:init:) byzantine.pml:16 (state 7)	[i = (i+1)]
 21:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
 22:	proc  0 (:init:) byzantine.pml:12 (state 10)	[((i<4))]
 23:	proc  0 (:init:) byzantine.pml:16 (state 4)	[initialValues[i] = value]
 24:	proc  0 (:init:) byzantine.pml:16 (state 5)	[value = (1-value)]
 25:	proc  0 (:init:) byzantine.pml:16 (state 6)	[finalValues[i] = i]
 26:	proc  0 (:init:) byzantine.pml:16 (state 7)	[i = (i+1)]
 27:	proc  0 (:init:) byzantine.pml:20 (state 11)	[.(goto)]
 28:	proc  0 (:init:) byzantine.pml:12 (state 10)	[else]
 29:	proc  0 (:init:) byzantine.pml:17 (state 9)	[goto :b0]
 30:	proc  0 (:init:) byzantine.pml:20 (state 13)	[i = 0]
 31:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 32:	proc  0 (:init:) byzantine.pml:21 (state 22)	[((i<3))]
Starting Reliable with pid 1
 33:	proc  0 (:init:) creates proc  1 (Reliable)
 33:	proc  0 (:init:) byzantine.pml:21 (state 15)	[(run Reliable(i))]
 34:	proc  1 (Reliable) byzantine.pml:86 (state 1)	[round = 0]
 35:	proc  0 (:init:) byzantine.pml:21 (state 16)	[i = (i+1)]
 36:	proc  1 (Reliable) byzantine.pml:87 (state 2)	[barrier = 4]
 37:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 38:	proc  0 (:init:) byzantine.pml:21 (state 22)	[((i<3))]
Starting Reliable with pid 2
 39:	proc  0 (:init:) creates proc  2 (Reliable)
 39:	proc  0 (:init:) byzantine.pml:21 (state 15)	[(run Reliable(i))]
 40:	proc  1 (Reliable) byzantine.pml:88 (state 3)	[localVar = initialValues[processId]]
 41:	proc  2 (Reliable) byzantine.pml:86 (state 1)	[round = 0]
 42:	proc  2 (Reliable) byzantine.pml:87 (state 2)	[barrier = 4]
 43:	proc  0 (:init:) byzantine.pml:21 (state 16)	[i = (i+1)]
 44:	proc  2 (Reliable) byzantine.pml:88 (state 3)	[localVar = initialValues[processId]]
 45:	proc  2 (Reliable) byzantine.h:37 (state 9)	[barriercounter = (barriercounter+1)]
 46:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 47:	proc  1 (Reliable) byzantine.h:37 (state 9)	[barriercounter = (barriercounter+1)]
 48:	proc  0 (:init:) byzantine.pml:21 (state 22)	[((i<3))]
Starting Reliable with pid 3
 49:	proc  0 (:init:) creates proc  3 (Reliable)
 49:	proc  0 (:init:) byzantine.pml:21 (state 15)	[(run Reliable(i))]
 50:	proc  0 (:init:) byzantine.pml:21 (state 16)	[i = (i+1)]
 51:	proc  3 (Reliable) byzantine.pml:86 (state 1)	[round = 0]
 52:	proc  3 (Reliable) byzantine.pml:87 (state 2)	[barrier = 4]
 53:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 54:	proc  3 (Reliable) byzantine.pml:88 (state 3)	[localVar = initialValues[processId]]
 55:	proc  3 (Reliable) byzantine.h:37 (state 9)	[barriercounter = (barriercounter+1)]
 56:	proc  0 (:init:) byzantine.pml:21 (state 22)	[(((i>=3)&&(i<4)))]
Starting Unreliable with pid 4
 57:	proc  0 (:init:) creates proc  4 (Unreliable)
 57:	proc  0 (:init:) byzantine.pml:22 (state 18)	[(run Unreliable(i))]
 58:	proc  0 (:init:) byzantine.pml:22 (state 19)	[i = (i+1)]
 59:	proc  0 (:init:) byzantine.pml:25 (state 23)	[.(goto)]
 60:	proc  0 (:init:) byzantine.pml:21 (state 22)	[else]
 61:	proc  0 (:init:) byzantine.pml:23 (state 21)	[goto :b1]
 62:	proc  0 (:init:) byzantine.pml:25 (state 25)	[initial = 1]
 63:	proc  4 (Unreliable) byzantine.pml:33 (state 1)	[round = 0]
 64:	proc  4 (Unreliable) byzantine.pml:35 (state 2)	[locC = 0]
 65:	proc  4 (Unreliable) byzantine.h:37 (state 8)	[barriercounter = (barriercounter+1)]
 66:	proc  2 (Reliable) byzantine.h:35 (state 6)	[((barrier<=barriercounter))]
 67:	proc  4 (Unreliable) byzantine.h:35 (state 5)	[((barrier<=barriercounter))]
 68:	proc  3 (Reliable) byzantine.h:35 (state 6)	[((barrier<=barriercounter))]
 69:	proc  1 (Reliable) byzantine.h:35 (state 6)	[((barrier<=barriercounter))]
 70:	proc  3 (Reliable) byzantine.h:35 (state 7)	[(1)]
 71:	proc  2 (Reliable) byzantine.h:35 (state 7)	[(1)]
 72:	proc  2 (Reliable) byzantine.h:36 (state 8)	[barrier = (barrier+4)]
 73:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
 74:	proc  3 (Reliable) byzantine.h:36 (state 8)	[barrier = (barrier+4)]
 75:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
 76:	proc  1 (Reliable) byzantine.h:35 (state 7)	[(1)]
 77:	proc  1 (Reliable) byzantine.h:36 (state 8)	[barrier = (barrier+4)]
 78:	proc  2 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
 79:	proc  2 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
 80:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 81:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 82:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 83:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 84:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 85:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 86:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 87:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 88:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 89:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
 90:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
 91:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
 92:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
 93:	proc  2 (Reliable) byzantine.h:25 (state 21)	[break]
 94:	proc  3 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
 95:	proc  3 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
 96:	proc  2 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
 97:	proc  3 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
 98:	proc  3 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
 99:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
100:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
101:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
102:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
103:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
104:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
105:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
106:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
107:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
108:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
109:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
110:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
111:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
112:	proc  3 (Reliable) byzantine.h:25 (state 21)	[break]
113:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
114:	proc  4 (Unreliable) byzantine.h:35 (state 6)	[(1)]
115:	proc  3 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
116:	proc  4 (Unreliable) byzantine.h:36 (state 7)	[barrier = (barrier+4)]
117:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
118:	proc  1 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
119:	proc  1 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
120:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
121:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
122:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
123:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
124:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
125:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
126:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
127:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
128:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
129:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
130:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
131:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
132:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
133:	proc  1 (Reliable) byzantine.h:25 (state 21)	[break]
134:	proc  4 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
135:	proc  1 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
136:	proc  4 (Unreliable) byzantine.pml:36 (state 118)	[((round<(1+1)))]
137:	proc  4 (Unreliable) byzantine.h:37 (state 15)	[barriercounter = (barriercounter+1)]
138:	proc  4 (Unreliable) byzantine.h:35 (state 12)	[((barrier<=barriercounter))]
139:	proc  3 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
140:	proc  1 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
141:	proc  4 (Unreliable) byzantine.h:35 (state 13)	[(1)]
142:	proc  4 (Unreliable) byzantine.h:36 (state 14)	[barrier = (barrier+4)]
143:	proc  4 (Unreliable) byzantine.pml:38 (state 16)	[locC = 0]
144:	proc  2 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
145:	proc  1 (Reliable) byzantine.h:35 (state 27)	[(1)]
146:	proc  1 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
147:	proc  4 (Unreliable) byzantine.pml:40 (state 43)	[(1)]
148:	proc  2 (Reliable) byzantine.h:35 (state 27)	[(1)]
149:	proc  2 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
150:	proc  1 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
151:	proc  4 (Unreliable) byzantine.h:29 (state 30)	[locC = 0]
152:	proc  4 (Unreliable) byzantine.h:28 (state 27)	[.(goto)]
153:	proc  4 (Unreliable) byzantine.h:25 (state 26)	[((locC<4))]
154:	proc  4 (Unreliable) byzantine.h:25 (state 22)	[A[processId].ch[locC]!0]
155:	proc  4 (Unreliable) byzantine.h:25 (state 23)	[locC = (locC+1)]
156:	proc  4 (Unreliable) byzantine.h:25 (state 26)	[((locC<4))]
157:	proc  4 (Unreliable) byzantine.h:25 (state 22)	[A[processId].ch[locC]!0]
158:	proc  4 (Unreliable) byzantine.h:25 (state 23)	[locC = (locC+1)]
159:	proc  4 (Unreliable) byzantine.h:25 (state 26)	[((locC<4))]
160:	proc  4 (Unreliable) byzantine.h:25 (state 22)	[A[processId].ch[locC]!0]
161:	proc  4 (Unreliable) byzantine.h:25 (state 23)	[locC = (locC+1)]
162:	proc  4 (Unreliable) byzantine.h:25 (state 26)	[((locC<4))]
163:	proc  4 (Unreliable) byzantine.h:25 (state 22)	[A[processId].ch[locC]!0]
164:	proc  4 (Unreliable) byzantine.h:25 (state 23)	[locC = (locC+1)]
165:	proc  4 (Unreliable) byzantine.h:25 (state 26)	[((locC>=4))]
166:	proc  4 (Unreliable) byzantine.h:25 (state 28)	[break]
167:	proc  4 (Unreliable) byzantine.pml:45 (state 44)	[.(goto)]
168:	proc  2 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
169:	proc  2 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
170:	proc  2 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
171:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
172:	proc  4 (Unreliable) byzantine.h:37 (state 50)	[barriercounter = (barriercounter+1)]
173:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
174:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
175:	proc  3 (Reliable) byzantine.h:35 (state 27)	[(1)]
176:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
177:	proc  1 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
178:	proc  3 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
179:	proc  3 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
180:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
181:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
182:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
183:	proc  1 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
184:	proc  3 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
185:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
186:	proc  3 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
187:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
188:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
189:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
190:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
191:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
192:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
193:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
194:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
195:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
196:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
197:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
198:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
199:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
200:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
201:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
202:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
203:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
204:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
205:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
206:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
207:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
208:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
209:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
210:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
211:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
212:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
213:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
214:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
215:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
216:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
217:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
218:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
219:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
220:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
221:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
222:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
223:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
224:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
225:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
226:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
227:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
228:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
229:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
230:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
231:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
232:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
233:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
234:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
235:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
236:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
237:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
238:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
239:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
240:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
241:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
242:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
243:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
244:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
245:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
246:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
247:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
248:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
249:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
250:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
251:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
252:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
253:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
254:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
255:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
256:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
257:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
258:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
259:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
260:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[else]
261:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
262:	proc  2 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
263:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
264:	proc  2 (Reliable) byzantine.pml:108 (state 47)	[(1)]
267:	proc  2 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
268:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
269:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
270:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
271:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
272:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[else]
273:	proc  1 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
274:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[else]
275:	proc  1 (Reliable) byzantine.pml:108 (state 47)	[(1)]
276:	proc  3 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
277:	proc  3 (Reliable) byzantine.pml:108 (state 47)	[(1)]
280:	proc  1 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
283:	proc  3 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
284:	proc  3 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
285:	proc  3 (Reliable) byzantine.h:35 (state 58)	[(1)]
286:	proc  1 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
287:	proc  3 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
288:	proc  2 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
289:	proc  4 (Unreliable) byzantine.h:35 (state 47)	[((barrier<=barriercounter))]
290:	proc  2 (Reliable) byzantine.h:35 (state 58)	[(1)]
291:	proc  2 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
292:	proc  1 (Reliable) byzantine.h:35 (state 58)	[(1)]
293:	proc  3 (Reliable) byzantine.pml:118 (state 75)	[else]
294:	proc  3 (Reliable) byzantine.pml:119 (state 74)	[(1)]
295:	proc  3 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
296:	proc  4 (Unreliable) byzantine.h:35 (state 48)	[(1)]
297:	proc  3 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
298:	proc  4 (Unreliable) byzantine.h:36 (state 49)	[barrier = (barrier+4)]
299:	proc  4 (Unreliable) byzantine.pml:47 (state 51)	[locC = 0]
300:	proc  1 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
301:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
302:	proc  2 (Reliable) byzantine.pml:118 (state 75)	[else]
303:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
304:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
305:	proc  1 (Reliable) byzantine.pml:118 (state 75)	[((processId==round))]
306:	proc  1 (Reliable) byzantine.h:29 (state 72)	[locC = 0]
307:	proc  1 (Reliable) byzantine.h:28 (state 69)	[.(goto)]
308:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
309:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
310:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
311:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
312:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
313:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
314:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
315:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
316:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
317:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
318:	proc  2 (Reliable) byzantine.pml:119 (state 74)	[(1)]
319:	proc  2 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
320:	proc  2 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
321:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
322:	proc  1 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
323:	proc  1 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
324:	proc  1 (Reliable) byzantine.h:25 (state 68)	[((locC>=4))]
325:	proc  1 (Reliable) byzantine.h:25 (state 70)	[break]
326:	proc  1 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
327:	proc  1 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
328:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
329:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
330:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
331:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
332:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
333:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
334:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
335:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
336:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
337:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
338:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
339:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
340:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
341:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
342:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
343:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
344:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
345:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
346:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
347:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
348:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
349:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[else]
350:	proc  4 (Unreliable) byzantine.pml:53 (state 61)	[goto :b5]
351:	proc  4 (Unreliable) byzantine.pml:56 (state 65)	[locC = 0]
352:	proc  4 (Unreliable) byzantine.h:37 (state 71)	[barriercounter = (barriercounter+1)]
353:	proc  4 (Unreliable) byzantine.h:35 (state 68)	[((barrier<=barriercounter))]
354:	proc  3 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
355:	proc  3 (Reliable) byzantine.h:35 (state 80)	[(1)]
356:	proc  4 (Unreliable) byzantine.h:35 (state 69)	[(1)]
357:	proc  2 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
358:	proc  1 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
359:	proc  4 (Unreliable) byzantine.h:36 (state 70)	[barrier = (barrier+4)]
360:	proc  2 (Reliable) byzantine.h:35 (state 80)	[(1)]
361:	proc  3 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
362:	proc  4 (Unreliable) byzantine.pml:58 (state 106)	[((processId!=round))]
363:	proc  2 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
364:	proc  2 (Reliable) byzantine.pml:124 (state 94)	[else]
365:	proc  2 (Reliable) byzantine.pml:128 (state 92)	[(nempty(A[round].ch[processId]))]
366:	proc  3 (Reliable) byzantine.pml:124 (state 94)	[else]
367:	proc  2 (Reliable) byzantine.pml:129 (state 91)	[A[round].ch[processId]?localVar]
368:	proc  1 (Reliable) byzantine.h:35 (state 80)	[(1)]
369:	proc  1 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
370:	proc  4 (Unreliable) byzantine.pml:59 (state 77)	[(nempty(A[round].ch[processId]))]
371:	proc  3 (Reliable) byzantine.pml:128 (state 92)	[(nempty(A[round].ch[processId]))]
372:	proc  4 (Unreliable) byzantine.pml:60 (state 76)	[A[round].ch[processId]?_]
373:	proc  1 (Reliable) byzantine.pml:124 (state 94)	[else]
374:	proc  3 (Reliable) byzantine.pml:129 (state 91)	[A[round].ch[processId]?localVar]
375:	proc  4 (Unreliable) byzantine.pml:62 (state 78)	[.(goto)]
376:	proc  2 (Reliable) byzantine.pml:131 (state 93)	[.(goto)]
377:	proc  4 (Unreliable) byzantine.pml:68 (state 107)	[.(goto)]
378:	proc  2 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
379:	proc  4 (Unreliable) byzantine.pml:68 (state 108)	[locC = 0]
380:	proc  1 (Reliable) byzantine.pml:128 (state 92)	[(nempty(A[round].ch[processId]))]
381:	proc  4 (Unreliable) byzantine.pml:69 (state 109)	[round = (round+1)]
382:	proc  2 (Reliable) byzantine.pml:133 (state 100)	[(empty(A[round].ch[processId]))]
383:	proc  1 (Reliable) byzantine.pml:129 (state 91)	[A[round].ch[processId]?localVar]
384:	proc  4 (Unreliable) byzantine.h:37 (state 115)	[barriercounter = (barriercounter+1)]
385:	proc  2 (Reliable) byzantine.pml:133 (state 97)	[(1)]
386:	proc  3 (Reliable) byzantine.pml:131 (state 93)	[.(goto)]
387:	proc  3 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
388:	proc  2 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
389:	proc  3 (Reliable) byzantine.pml:133 (state 100)	[(empty(A[round].ch[processId]))]
390:	proc  1 (Reliable) byzantine.pml:131 (state 93)	[.(goto)]
391:	proc  1 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
392:	proc  2 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
393:	proc  3 (Reliable) byzantine.pml:133 (state 97)	[(1)]
394:	proc  2 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
395:	proc  1 (Reliable) byzantine.pml:133 (state 100)	[(empty(A[round].ch[processId]))]
396:	proc  1 (Reliable) byzantine.pml:133 (state 97)	[(1)]
397:	proc  3 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
398:	proc  1 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
399:	proc  3 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
400:	proc  1 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
401:	proc  3 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
402:	proc  1 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
403:	proc  1 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
404:	proc  1 (Reliable) byzantine.h:35 (state 106)	[(1)]
405:	proc  3 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
406:	proc  2 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
407:	proc  3 (Reliable) byzantine.h:35 (state 106)	[(1)]
408:	proc  1 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
409:	proc  3 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
410:	proc  4 (Unreliable) byzantine.h:35 (state 112)	[((barrier<=barriercounter))]
411:	proc  4 (Unreliable) byzantine.h:35 (state 113)	[(1)]
412:	proc  2 (Reliable) byzantine.h:35 (state 106)	[(1)]
413:	proc  2 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
414:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
415:	proc  3 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
416:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
417:	proc  1 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
418:	proc  1 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
419:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
420:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
421:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
422:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
423:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
424:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
425:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
426:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
427:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
428:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
429:	proc  1 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
430:	proc  1 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
431:	proc  1 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
432:	proc  1 (Reliable) byzantine.h:25 (state 21)	[break]
433:	proc  4 (Unreliable) byzantine.h:36 (state 114)	[barrier = (barrier+4)]
434:	proc  4 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
435:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
436:	proc  1 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
437:	proc  3 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
438:	proc  3 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
439:	proc  3 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
440:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
441:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
442:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
443:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
444:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
445:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
446:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
447:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
448:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
449:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
450:	proc  3 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
451:	proc  3 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
452:	proc  3 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
453:	proc  3 (Reliable) byzantine.h:25 (state 21)	[break]
454:	proc  3 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
455:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round<(1+1)))]
456:	proc  4 (Unreliable) byzantine.pml:36 (state 118)	[((round<(1+1)))]
457:	proc  2 (Reliable) byzantine.h:29 (state 23)	[locC = 0]
458:	proc  2 (Reliable) byzantine.h:28 (state 20)	[.(goto)]
459:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
460:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
461:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
462:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
463:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
464:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
465:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
466:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
467:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
468:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC<4))]
469:	proc  2 (Reliable) byzantine.h:25 (state 15)	[A[processId].ch[locC]!localVar]
470:	proc  2 (Reliable) byzantine.h:25 (state 16)	[locC = (locC+1)]
471:	proc  2 (Reliable) byzantine.h:25 (state 19)	[((locC>=4))]
472:	proc  2 (Reliable) byzantine.h:25 (state 21)	[break]
473:	proc  4 (Unreliable) byzantine.h:37 (state 15)	[barriercounter = (barriercounter+1)]
474:	proc  2 (Reliable) byzantine.h:37 (state 29)	[barriercounter = (barriercounter+1)]
475:	proc  3 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
476:	proc  1 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
477:	proc  1 (Reliable) byzantine.h:35 (state 27)	[(1)]
478:	proc  3 (Reliable) byzantine.h:35 (state 27)	[(1)]
479:	proc  3 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
480:	proc  2 (Reliable) byzantine.h:35 (state 26)	[((barrier<=barriercounter))]
481:	proc  1 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
482:	proc  4 (Unreliable) byzantine.h:35 (state 12)	[((barrier<=barriercounter))]
483:	proc  2 (Reliable) byzantine.h:35 (state 27)	[(1)]
484:	proc  1 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
485:	proc  3 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
486:	proc  1 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
487:	proc  1 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
488:	proc  3 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
489:	proc  3 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
490:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
491:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
492:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
493:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
494:	proc  4 (Unreliable) byzantine.h:35 (state 13)	[(1)]
495:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
496:	proc  4 (Unreliable) byzantine.h:36 (state 14)	[barrier = (barrier+4)]
497:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
498:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
499:	proc  4 (Unreliable) byzantine.pml:38 (state 16)	[locC = 0]
500:	proc  4 (Unreliable) byzantine.pml:40 (state 43)	[(1)]
501:	proc  4 (Unreliable) byzantine.pml:41 (state 18)	[(1)]
502:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
503:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
504:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
505:	proc  2 (Reliable) byzantine.h:36 (state 28)	[barrier = (barrier+4)]
506:	proc  4 (Unreliable) byzantine.pml:45 (state 44)	[.(goto)]
507:	proc  2 (Reliable) byzantine.pml:96 (state 30)	[msgCounter[0] = 0]
508:	proc  4 (Unreliable) byzantine.h:37 (state 50)	[barriercounter = (barriercounter+1)]
509:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
510:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
511:	proc  2 (Reliable) byzantine.pml:97 (state 31)	[msgCounter[1] = 0]
512:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
513:	proc  2 (Reliable) byzantine.pml:99 (state 32)	[locC = 0]
514:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
515:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
516:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
517:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
518:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
519:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
520:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
521:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
522:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
523:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
524:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
525:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
526:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
527:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
528:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
529:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
530:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
531:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
532:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
533:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
534:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
535:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
536:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
537:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
538:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
539:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
540:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
541:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
542:	proc  1 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
543:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
544:	proc  1 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
545:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
546:	proc  3 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
547:	proc  3 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
548:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
549:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
550:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
551:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
552:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
553:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
554:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
555:	proc  1 (Reliable) byzantine.pml:101 (state 39)	[(empty(A[locC].ch[processId]))]
556:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
557:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
558:	proc  3 (Reliable) byzantine.pml:101 (state 39)	[(empty(A[locC].ch[processId]))]
559:	proc  3 (Reliable) byzantine.pml:102 (state 35)	[(1)]
560:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
561:	proc  3 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
562:	proc  1 (Reliable) byzantine.pml:102 (state 35)	[(1)]
563:	proc  1 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
564:	proc  1 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
565:	proc  1 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
566:	proc  3 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
567:	proc  3 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
568:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
569:	proc  3 (Reliable) byzantine.pml:100 (state 44)	[else]
570:	proc  1 (Reliable) byzantine.pml:100 (state 44)	[else]
571:	proc  1 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
572:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
573:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
574:	proc  3 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
575:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
576:	proc  3 (Reliable) byzantine.pml:108 (state 47)	[(1)]
579:	proc  3 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
580:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
581:	proc  1 (Reliable) byzantine.pml:108 (state 47)	[(1)]
582:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(nempty(A[locC].ch[processId]))]
585:	proc  1 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
586:	proc  2 (Reliable) byzantine.pml:103 (state 37)	[A[locC].ch[processId]?msg]
587:	proc  2 (Reliable) byzantine.pml:104 (state 38)	[msgCounter[msg] = (msgCounter[msg]+1)]
588:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
589:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
590:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
591:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[((locC<4))]
592:	proc  2 (Reliable) byzantine.pml:101 (state 39)	[(empty(A[locC].ch[processId]))]
593:	proc  2 (Reliable) byzantine.pml:102 (state 35)	[(1)]
594:	proc  2 (Reliable) byzantine.pml:105 (state 40)	[.(goto)]
595:	proc  2 (Reliable) byzantine.pml:105 (state 41)	[locC = (locC+1)]
596:	proc  2 (Reliable) byzantine.pml:108 (state 45)	[.(goto)]
597:	proc  2 (Reliable) byzantine.pml:100 (state 44)	[else]
598:	proc  2 (Reliable) byzantine.pml:106 (state 43)	[goto :b10]
599:	proc  2 (Reliable) byzantine.pml:108 (state 47)	[(1)]
602:	proc  2 (Reliable) byzantine.h:34 (state 55)	[barriercounter = (barriercounter+1)]
603:	proc  3 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
604:	proc  1 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
605:	proc  2 (Reliable) byzantine.h:35 (state 57)	[((barrier<=barriercounter))]
606:	proc  3 (Reliable) byzantine.h:35 (state 58)	[(1)]
607:	proc  4 (Unreliable) byzantine.h:35 (state 47)	[((barrier<=barriercounter))]
608:	proc  2 (Reliable) byzantine.h:35 (state 58)	[(1)]
609:	proc  3 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
610:	proc  4 (Unreliable) byzantine.h:35 (state 48)	[(1)]
611:	proc  1 (Reliable) byzantine.h:35 (state 58)	[(1)]
612:	proc  2 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
613:	proc  4 (Unreliable) byzantine.h:36 (state 49)	[barrier = (barrier+4)]
614:	proc  2 (Reliable) byzantine.pml:118 (state 75)	[((processId==round))]
615:	proc  3 (Reliable) byzantine.pml:118 (state 75)	[else]
616:	proc  2 (Reliable) byzantine.h:29 (state 72)	[locC = 0]
617:	proc  2 (Reliable) byzantine.h:28 (state 69)	[.(goto)]
618:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
619:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
620:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
621:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
622:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
623:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
624:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
625:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
626:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
627:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC<4))]
628:	proc  3 (Reliable) byzantine.pml:119 (state 74)	[(1)]
629:	proc  1 (Reliable) byzantine.h:36 (state 59)	[barrier = (barrier+4)]
630:	proc  4 (Unreliable) byzantine.pml:47 (state 51)	[locC = 0]
631:	proc  1 (Reliable) byzantine.pml:118 (state 75)	[else]
632:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
633:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
634:	proc  1 (Reliable) byzantine.pml:119 (state 74)	[(1)]
635:	proc  3 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
636:	proc  3 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
637:	proc  1 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
638:	proc  1 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
639:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
640:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
641:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
642:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
643:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
644:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
645:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
646:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
647:	proc  2 (Reliable) byzantine.h:25 (state 64)	[A[processId].ch[locC]!majority]
648:	proc  2 (Reliable) byzantine.h:25 (state 65)	[locC = (locC+1)]
649:	proc  2 (Reliable) byzantine.h:25 (state 68)	[((locC>=4))]
650:	proc  2 (Reliable) byzantine.h:25 (state 70)	[break]
651:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
652:	proc  2 (Reliable) byzantine.pml:121 (state 76)	[.(goto)]
653:	proc  2 (Reliable) byzantine.h:37 (state 82)	[barriercounter = (barriercounter+1)]
654:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
655:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
656:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
657:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(nempty(A[locC].ch[processId]))]
658:	proc  4 (Unreliable) byzantine.pml:51 (state 56)	[A[locC].ch[processId]?_]
659:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
660:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
661:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
662:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[((locC<4))]
663:	proc  4 (Unreliable) byzantine.pml:49 (state 57)	[(empty(A[locC].ch[processId]))]
664:	proc  4 (Unreliable) byzantine.pml:49 (state 54)	[(1)]
665:	proc  4 (Unreliable) byzantine.pml:52 (state 58)	[.(goto)]
666:	proc  4 (Unreliable) byzantine.pml:52 (state 59)	[locC = (locC+1)]
667:	proc  4 (Unreliable) byzantine.pml:56 (state 63)	[.(goto)]
668:	proc  4 (Unreliable) byzantine.pml:48 (state 62)	[else]
669:	proc  4 (Unreliable) byzantine.pml:53 (state 61)	[goto :b5]
670:	proc  4 (Unreliable) byzantine.pml:56 (state 65)	[locC = 0]
671:	proc  4 (Unreliable) byzantine.h:37 (state 71)	[barriercounter = (barriercounter+1)]
672:	proc  2 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
673:	proc  2 (Reliable) byzantine.h:35 (state 80)	[(1)]
674:	proc  4 (Unreliable) byzantine.h:35 (state 68)	[((barrier<=barriercounter))]
675:	proc  1 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
676:	proc  3 (Reliable) byzantine.h:35 (state 79)	[((barrier<=barriercounter))]
677:	proc  1 (Reliable) byzantine.h:35 (state 80)	[(1)]
678:	proc  3 (Reliable) byzantine.h:35 (state 80)	[(1)]
679:	proc  2 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
680:	proc  3 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
681:	proc  3 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
682:	proc  1 (Reliable) byzantine.h:36 (state 81)	[barrier = (barrier+4)]
683:	proc  4 (Unreliable) byzantine.h:35 (state 69)	[(1)]
684:	proc  3 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
685:	proc  2 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
686:	proc  3 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
687:	proc  4 (Unreliable) byzantine.h:36 (state 70)	[barrier = (barrier+4)]
688:	proc  4 (Unreliable) byzantine.pml:58 (state 106)	[((processId!=round))]
689:	proc  4 (Unreliable) byzantine.pml:59 (state 77)	[(nempty(A[round].ch[processId]))]
690:	proc  2 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
691:	proc  2 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
692:	proc  3 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
693:	proc  1 (Reliable) byzantine.pml:124 (state 94)	[((msgCounter[1]>=3))]
694:	proc  1 (Reliable) byzantine.pml:125 (state 84)	[localVar = 1]
695:	proc  3 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
696:	proc  4 (Unreliable) byzantine.pml:60 (state 76)	[A[round].ch[processId]?_]
697:	proc  3 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
698:	proc  2 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
699:	proc  1 (Reliable) byzantine.pml:133 (state 95)	[.(goto)]
700:	proc  2 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
701:	proc  4 (Unreliable) byzantine.pml:62 (state 78)	[.(goto)]
702:	proc  3 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
703:	proc  2 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
704:	proc  1 (Reliable) byzantine.pml:133 (state 100)	[(nempty(A[round].ch[processId]))]
705:	proc  3 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
706:	proc  4 (Unreliable) byzantine.pml:68 (state 107)	[.(goto)]
707:	proc  1 (Reliable) byzantine.pml:134 (state 99)	[A[round].ch[processId]?_]
708:	proc  4 (Unreliable) byzantine.pml:68 (state 108)	[locC = 0]
709:	proc  4 (Unreliable) byzantine.pml:69 (state 109)	[round = (round+1)]
710:	proc  4 (Unreliable) byzantine.h:37 (state 115)	[barriercounter = (barriercounter+1)]
711:	proc  2 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
712:	proc  2 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
713:	proc  1 (Reliable) byzantine.pml:137 (state 101)	[.(goto)]
714:	proc  1 (Reliable) byzantine.pml:137 (state 102)	[round = (round+1)]
715:	proc  1 (Reliable) byzantine.h:37 (state 108)	[barriercounter = (barriercounter+1)]
716:	proc  2 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
717:	proc  2 (Reliable) byzantine.h:35 (state 106)	[(1)]
718:	proc  4 (Unreliable) byzantine.h:35 (state 112)	[((barrier<=barriercounter))]
719:	proc  3 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
720:	proc  3 (Reliable) byzantine.h:35 (state 106)	[(1)]
721:	proc  2 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
722:	proc  4 (Unreliable) byzantine.h:35 (state 113)	[(1)]
723:	proc  2 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
724:	proc  2 (Reliable) byzantine.pml:91 (state 109)	[((round>=(1+1)))]
725:	proc  1 (Reliable) byzantine.h:35 (state 105)	[((barrier<=barriercounter))]
726:	proc  1 (Reliable) byzantine.h:35 (state 106)	[(1)]
727:	proc  4 (Unreliable) byzantine.h:36 (state 114)	[barrier = (barrier+4)]
728:	proc  3 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
729:	proc  3 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
730:	proc  3 (Reliable) byzantine.pml:91 (state 109)	[((round>=(1+1)))]
731:	proc  2 (Reliable) byzantine.pml:91 (state 11)	[goto :b8]
732:	proc  4 (Unreliable) byzantine.pml:73 (state 119)	[.(goto)]
733:	proc  1 (Reliable) byzantine.h:36 (state 107)	[barrier = (barrier+4)]
734:	proc  1 (Reliable) byzantine.pml:141 (state 110)	[.(goto)]
735:	proc  4 (Unreliable) byzantine.pml:36 (state 118)	[else]
736:	proc  3 (Reliable) byzantine.pml:91 (state 11)	[goto :b8]
737:	proc  4 (Unreliable) byzantine.pml:71 (state 117)	[goto :b2]
738:	proc  2 (Reliable) byzantine.pml:141 (state 112)	[finalValues[processId] = localVar]
738:	proc  4 (Unreliable)                       terminates
739:	proc  3 (Reliable) byzantine.pml:141 (state 112)	[finalValues[processId] = localVar]
739:	proc  3 (Reliable)                   terminates
739:	proc  2 (Reliable)               terminates
740:	proc  1 (Reliable) byzantine.pml:91 (state 109)	[((round>=(1+1)))]
741:	proc  1 (Reliable) byzantine.pml:91 (state 11)	[goto :b8]
742:	proc  1 (Reliable) byzantine.pml:141 (state 112)	[finalValues[processId] = localVar]
742:	proc  1 (Reliable)           terminates
742:	proc  0 (:init:)       terminates
5 processes created
